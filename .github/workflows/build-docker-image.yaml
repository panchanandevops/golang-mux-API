name: Build and Push go mux API Docker Image

permissions:
  security-events: write
  contents: write
  pull-requests: write

on:
  push:
    tags:
      - "v*.*.*" # Trigger on pushes of tags matching v1.0.0, v2.1.3, etc.
    paths-ignore:
      - "README.md" # Ignore changes to README.md

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: panchanandevops/golang-mux-app
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{version}}

      - name: Build and push go mux API Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/go.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=panchanandevops/golang-mux-app:cache # Pull cache from the registry
          cache-to: type=registry,ref=panchanandevops/golang-mux-app:cache,mode=max # Push cache to the registry

      - name: Run Trivy for HIGH, CRITICAL CVEs and report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ steps.meta.outputs.tags }}"
          exit-code: 0 # Do not fail the workflow on vulnerabilities
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "HIGH,CRITICAL"
          format: "sarif"
          output: "trivy-results.sarif"
        env:
          TRIVY_CACHE_DIR: /tmp/trivy-cache # Use a temporary directory to avoid caching in .cache

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

      - name: Set Git user identity
        run: |
          git config --global user.email "panchanandevops@gmail.com"
          git config --global user.name "panchanandevops"

      - name: Create a new branch
        run: |
          git checkout -b main   
          git pull origin main
          git checkout -b update-deployment-image-${{ github.sha }}
          git push --set-upstream origin update-deployment-image-${{ github.sha }}

      - name: Update deployment image in YAML
        run: |
          sed -i "s|image: panchanandevops/golang-mux-app:.*|image: ${{ steps.meta.outputs.tags }}|g" Deploy/k8s/manifests/5-api-deployment.yaml
          sed -i "s|image: panchanandevops/golang-mux-app:.*|image: ${{ steps.meta.outputs.tags }}|g" Deploy/kustomize/base/5-api-deployment.yaml
          sed -i "s|image: panchanandevops/golang-mux-app:.*|image: ${{ steps.meta.outputs.tags }}|g" Deploy/go-helm-chart/values.yaml

      - name: Commit changes
        run: |
          git add Deploy/k8s/manifests/5-api-deployment.yaml Deploy/kustomize/base/5-api-deployment.yaml Deploy/go-helm-chart/values.yaml trivy-results.sarif 
          git commit -m "Update tag in Deployment image tag and add Trivy scan results"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT_TOKEN }}
          branch: update-deployment-image-${{ github.sha }}
          base: main
          title: "Update go mux API image tag to ${{ steps.meta.outputs.tags }}"
          body: "This PR updates the go mux API image tag to ${{ steps.meta.outputs.tags }}."
